# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.6.7

pipelines:
  branches:
    dev:
      - step:
          caches:
            - pip
          name: Deploying to Development
          deployment: Development
          script:
            - rm .chalice/deployed/dev.json
            - cp .chalice/.lock/dev.json .chalice/deployed/dev.json
            - pip install --upgrade awscli
            - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
            - export AWS_COGNITO_USER_POOL_NAME=${AWS_COGNITO_USER_POOL_NAME}
            - export AWS_COGNITO_USER_POOL_ARN=${AWS_COGNITO_USER_POOL_ARN}
            - export APP_NAME_SUFFIX=${APP_NAME_SUFFIX}
            - echo "DATALAKE_AWS_ACCOUNT_ACCESS_KEY_ID=${DATALAKE_AWS_ACCOUNT_ACCESS_KEY_ID}" >> chalicelib/.env
            - echo "DATALAKE_AWS_ACCOUNT_SECRET_KEY_ID=${DATALAKE_AWS_ACCOUNT_SECRET_KEY_ID}" >> chalicelib/.env
            - echo "DATALAKE_USERTRACK_DELIVERY_STREAM_NAME=${DATALAKE_USERTRACK_DELIVERY_STREAM_NAME}" >> chalicelib/.env
            - pip install -r requirements.txt
            - chalice deploy --stage dev
    stage:
      - step:
          caches:
            - pip
          name: Deploying to Staging
          deployment: Staging
          script:
            - rm .chalice/deployed/stage.json
            - cp .chalice/.lock/stage.json .chalice/deployed/stage.json
            - pip install --upgrade awscli
            - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
            - export AWS_COGNITO_USER_POOL_NAME=${AWS_COGNITO_USER_POOL_NAME}
            - export AWS_COGNITO_USER_POOL_ARN=${AWS_COGNITO_USER_POOL_ARN}
            - export APP_NAME_SUFFIX=${APP_NAME_SUFFIX}
            - echo "DATALAKE_AWS_ACCOUNT_ACCESS_KEY_ID=${DATALAKE_AWS_ACCOUNT_ACCESS_KEY_ID}" >> chalicelib/.env
            - echo "DATALAKE_AWS_ACCOUNT_SECRET_KEY_ID=${DATALAKE_AWS_ACCOUNT_SECRET_KEY_ID}" >> chalicelib/.env
            - echo "DATALAKE_USERTRACK_DELIVERY_STREAM_NAME=${DATALAKE_USERTRACK_DELIVERY_STREAM_NAME}" >> chalicelib/.env
            - pip install -r requirements.txt
            - chalice deploy --stage stage
    master:
      - step:
          caches:
            - pip
          name: Deploying to Production
          deployment: Production
          script:
            - rm .chalice/deployed/production.json
            - cp .chalice/.lock/production.json .chalice/deployed/production.json
            - pip install --upgrade awscli
            - export AWS_ACCESS_KEY_ID=${AWS_PROD_ACCESS_KEY_ID}
            - export AWS_SECRET_ACCESS_KEY=${AWS_PROD_SECRET_ACCESS_KEY}
            - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
            - export APP_NAME_SUFFIX=${APP_NAME_SUFFIX}
            - echo "DATALAKE_AWS_ACCOUNT_ACCESS_KEY_ID=${DATALAKE_AWS_ACCOUNT_ACCESS_KEY_ID}" >> chalicelib/.env
            - echo "DATALAKE_AWS_ACCOUNT_SECRET_KEY_ID=${DATALAKE_AWS_ACCOUNT_SECRET_KEY_ID}" >> chalicelib/.env
            - echo "DATALAKE_USERTRACK_DELIVERY_STREAM_NAME=${DATALAKE_USERTRACK_DELIVERY_STREAM_NAME}" >> chalicelib/.env
            - pip install -r requirements.txt
            - chalice deploy --stage production
